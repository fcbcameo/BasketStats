{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nfunction CompetitionsComponent_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nfunction CompetitionsComponent_li_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 8)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function CompetitionsComponent_li_17_Template_button_click_3_listener() {\n      const c_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.confirmDelete(c_r3.id, c_r3.name));\n    });\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.name);\n  }\n}\nexport let CompetitionsComponent = /*#__PURE__*/(() => {\n  class CompetitionsComponent {\n    constructor(api) {\n      this.api = api;\n      this.competitions = [];\n      this.name = '';\n      this.error = null;\n    }\n    ngOnInit() {\n      this.load();\n    }\n    load() {\n      this.api.getCompetitions().subscribe(x => this.competitions = x);\n    }\n    create() {\n      this.error = null;\n      if (!this.name.trim()) {\n        this.error = 'Name is required';\n        return;\n      }\n      this.api.createCompetition({\n        name: this.name.trim()\n      }).subscribe({\n        next: () => {\n          this.name = '';\n          this.load();\n        },\n        error: () => {\n          this.error = 'Failed to create';\n        }\n      });\n    }\n    confirmDelete(id, name) {\n      if (!confirm(`This will cascade delete competition '${name}' and all its matches and stats. Continue?`)) return;\n      this.api.deleteCompetition(id).subscribe(() => this.load());\n    }\n    static {\n      this.ɵfac = function CompetitionsComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CompetitionsComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CompetitionsComponent,\n        selectors: [[\"app-competitions\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 18,\n        vars: 3,\n        consts: [[1, \"stats-card\"], [2, \"display\", \"flex\", \"gap\", \"8px\", \"align-items\", \"center\"], [\"appearance\", \"fill\", 2, \"flex\", \"1\"], [\"matInput\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"class\", \"text-info\", 4, \"ngIf\"], [\"style\", \"display:flex; align-items:center; justify-content:space-between; gap:8px\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-info\"], [2, \"display\", \"flex\", \"align-items\", \"center\", \"justify-content\", \"space-between\", \"gap\", \"8px\"], [\"mat-stroked-button\", \"\", \"color\", \"warn\", 3, \"click\"]],\n        template: function CompetitionsComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h1\");\n            i0.ɵɵtext(1, \"Competitions\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"mat-card\", 0)(3, \"h3\");\n            i0.ɵɵtext(4, \"Create a New Competition\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 1)(6, \"mat-form-field\", 2)(7, \"mat-label\");\n            i0.ɵɵtext(8, \"Competition Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"input\", 3);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function CompetitionsComponent_Template_input_ngModelChange_9_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.name, $event) || (ctx.name = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(10, \"button\", 4);\n            i0.ɵɵlistener(\"click\", function CompetitionsComponent_Template_button_click_10_listener() {\n              return ctx.create();\n            });\n            i0.ɵɵtext(11, \"Create\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(12, CompetitionsComponent_p_12_Template, 2, 1, \"p\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"mat-card\", 0)(14, \"h3\");\n            i0.ɵɵtext(15, \"All Competitions\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"ul\");\n            i0.ɵɵtemplate(17, CompetitionsComponent_li_17_Template, 5, 1, \"li\", 6);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(9);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.name);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.competitions);\n          }\n        },\n        dependencies: [CommonModule, i2.NgForOf, i2.NgIf, FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, MatFormFieldModule, i4.MatFormField, i4.MatLabel, MatInputModule, i5.MatInput, MatButtonModule, i6.MatButton, MatCardModule, i7.MatCard],\n        encapsulation: 2\n      });\n    }\n  }\n  return CompetitionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}