{"ast":null,"code":"import jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as i0 from \"@angular/core\";\nexport let PdfService = /*#__PURE__*/(() => {\n  class PdfService {\n    generatePlayerStatsReport(players, competitionName) {\n      const doc = new jsPDF({\n        orientation: 'landscape',\n        unit: 'pt',\n        format: 'a4'\n      });\n      // Header with gradient-like banner using rectangles\n      const width = doc.internal.pageSize.getWidth();\n      doc.setFillColor(29, 66, 138);\n      doc.rect(0, 0, width, 60, 'F');\n      doc.setFillColor(201, 8, 42);\n      doc.rect(0, 55, width, 5, 'F');\n      // Logo if available (served at /images)\n      const logo = new Image();\n      logo.src = '/images/basketballstats.png';\n      // Note: add image after it's loaded; jsPDF doesn't await image load in this simple service\n      doc.setTextColor(255, 255, 255);\n      doc.setFontSize(18);\n      doc.text('BasketStats - Player Statistics Report', 80, 38);\n      doc.setFontSize(12);\n      doc.text(`Competition: ${competitionName}`, 80, 58);\n      // Table\n      const head = [['Player', 'GP', 'PPG', 'RPG', 'APG', 'FG%', '3P%', 'FT%', 'SPG', 'BPG', 'TOV', 'MPG', 'EFF', 'Total PTS', 'Total REB', 'Total AST', 'Total STL', 'Total BLK']];\n      const body = players.map(p => [p.playerName, p.gamesPlayed, p.pointsPerGame.toFixed(1), p.reboundsPerGame.toFixed(1), p.assistsPerGame.toFixed(1), p.fieldGoalPercentage.toFixed(1), p.threePointPercentage.toFixed(1), p.freeThrowPercentage.toFixed(1), p.stealsPerGame.toFixed(1), p.blocksPerGame.toFixed(1), p.turnoversPerGame.toFixed(1), p.minutesPerGame.toFixed(1), p.efficiency.toFixed(1), p.totalPoints, p.totalRebounds, p.totalAssists, p.totalSteals, p.totalBlocks]);\n      autoTable(doc, {\n        head,\n        body,\n        startY: 80,\n        styles: {\n          fontSize: 9,\n          cellPadding: 4\n        },\n        headStyles: {\n          fillColor: [29, 66, 138],\n          textColor: [255, 255, 255]\n        },\n        alternateRowStyles: {\n          fillColor: [245, 245, 245]\n        }\n      });\n      doc.save(`PlayerStats_${competitionName.replace(/[^a-z0-9]/gi, '_')}.pdf`);\n    }\n    static {\n      this.ɵfac = function PdfService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PdfService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: PdfService,\n        factory: PdfService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return PdfService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}