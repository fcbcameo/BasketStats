{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.apiBaseUrl;\n    }\n    getPlayers() {\n      return this.http.get(this.baseUrl + 'api/players');\n    }\n    getPlayerStats(playerId, competitionId) {\n      let params = new HttpParams();\n      if (competitionId) params = params.set('competitionId', competitionId);\n      return this.http.get(`${this.baseUrl}api/players/${playerId}/stats`, {\n        params\n      });\n    }\n    getAllPlayersStats(competitionId) {\n      let url = this.baseUrl + 'api/players/stats';\n      if (competitionId) url += `?competitionId=${competitionId}`;\n      return this.http.get(url);\n    }\n    getTeamStats(competitionId) {\n      let url = this.baseUrl + 'api/team/stats';\n      if (competitionId) url += `?competitionId=${competitionId}`;\n      return this.http.get(url);\n    }\n    getCompetitions() {\n      return this.http.get(this.baseUrl + 'api/competitions');\n    }\n    createCompetition(payload) {\n      return this.http.post(this.baseUrl + 'api/competitions', payload);\n    }\n    uploadMatchStats(competitionId, file) {\n      const form = new FormData();\n      form.append('file', file, file.name);\n      return this.http.post(`${this.baseUrl}api/competitions/${competitionId}/matches`, form);\n    }\n    getMatches() {\n      return this.http.get(this.baseUrl + 'api/matches');\n    }\n    deleteMatch(matchId) {\n      return this.http.delete(`${this.baseUrl}api/matches/${matchId}`);\n    }\n    static {\n      this.ɵfac = function ApiService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ApiService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ApiService,\n        factory: ApiService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}