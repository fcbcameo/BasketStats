// <auto-generated />
using System;
using BasketStats.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BasketStats.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BasketStats.Domain.Competition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("BasketStats.Domain.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompetitionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("BasketStats.Domain.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BasketStats.Domain.Match", b =>
                {
                    b.HasOne("BasketStats.Domain.Competition", null)
                        .WithMany()
                        .HasForeignKey("CompetitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("BasketStats.Domain.ValueObjects.PlayerStats", "PlayerStats", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("Assists")
                                .HasColumnType("int");

                            b1.Property<int>("Blocks")
                                .HasColumnType("int");

                            b1.Property<int>("DefensiveRebounds")
                                .HasColumnType("int");

                            b1.Property<int>("FieldGoalsAttempted")
                                .HasColumnType("int");

                            b1.Property<int>("FieldGoalsMade")
                                .HasColumnType("int");

                            b1.Property<int>("FreeThrowsAttempted")
                                .HasColumnType("int");

                            b1.Property<int>("FreeThrowsMade")
                                .HasColumnType("int");

                            b1.Property<Guid>("MatchId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Minutes")
                                .HasColumnType("int");

                            b1.Property<int>("OffensiveRebounds")
                                .HasColumnType("int");

                            b1.Property<int>("PersonalFouls")
                                .HasColumnType("int");

                            b1.Property<Guid>("PlayerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Points")
                                .HasColumnType("int");

                            b1.Property<int>("Rebounds")
                                .HasColumnType("int");

                            b1.Property<int>("Steals")
                                .HasColumnType("int");

                            b1.Property<int>("ThreePointersAttempted")
                                .HasColumnType("int");

                            b1.Property<int>("ThreePointersMade")
                                .HasColumnType("int");

                            b1.Property<int>("Turnovers")
                                .HasColumnType("int");

                            b1.Property<int>("TwoPointersAttempted")
                                .HasColumnType("int");

                            b1.Property<int>("TwoPointersMade")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("MatchId");

                            b1.ToTable("PlayerStats", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MatchId");
                        });

                    b.Navigation("PlayerStats");
                });
#pragma warning restore 612, 618
        }
    }
}
